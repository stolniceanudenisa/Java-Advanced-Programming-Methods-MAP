

s3
Nota{student=Student{id=3, name='s3'}, tema=Tema{id='t2', desc='desc2'}, value=7.0, date=2018-12-24 00:00}
Nota{student=Student{id=3, name='s3'}, tema=Tema{id='t4', desc='desc4'}, value=9.0, date=2018-10-14 00:00}
s1
Nota{student=Student{id=1, name='s1'}, tema=Tema{id='t1', desc='desc1'}, value=10.0, date=2018-12-24 00:00}
Nota{student=Student{id=1, name='s1'}, tema=Tema{id='t1', desc='desc1'}, value=9.0, date=2018-11-22 00:00}
s2
Nota{student=Student{id=2, name='s2'}, tema=Tema{id='t2', desc='desc2'}, value=10.0, date=2018-10-23 00:00}
Nota{student=Student{id=2, name='s2'}, tema=Tema{id='t3', desc='desc3'}, value=10.0, date=2018-10-14 00:00}
Nota{student=Student{id=2, name='s2'}, tema=Tema{id='t4', desc='desc4'}, value=10.0, date=2018-12-24 00:00}

  public static void main(String[] args) {

        Map<Student,List<Nota>> map;
        map=getNote(getStudents(),getTeme())
                .stream()
                .collect(Collectors.groupingBy(Nota::getStudent));

//        map.entrySet().forEach(x->
//        {
//            System.out.println(x.getKey().getName());
//            x.getValue().forEach(System.out::println);
//
//        });

        map.entrySet()
                .stream()
                .map(e->{
                    String name=e.getKey().getName()+" ";
                    double suma=e.getValue()
                            .stream()
                            .map(x->{ return x.getValue();})
                            .reduce(0d,(x,y)->x+y);


                    return name+" "+suma/3;
                })
                .forEach(System.out::println);



//        LocalDate date=LocalDate.now();
//        System.out.println(date);
//
//        System.out.println(map);


    }